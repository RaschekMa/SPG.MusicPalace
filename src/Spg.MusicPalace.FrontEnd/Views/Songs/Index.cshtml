@using Spg.MusicPalace.Application;
@model (PagenatedList<Spg.MusicPalace.Dtos.SongDto> songs, string filter)

@{
    string hasPrevious = Model.songs.HasPreviousPage ? "" : "disabled";
    string hasNext = Model.songs.HasNextPage ? "" : "disabled";
}

<h3>All Songs</h3>

@if (Model.songs is not null 
    && Model.songs.Count > 0)
{
    <form method="get">
        <label>FilterTitle</label>
        <input name="filter" value="@Model.filter">
        <button type="submit">Go</button>
    </form>

    <a 
        asp-action="Index" 
        asp-route-currentFilter="@Model.filter" 
        asp-route-pageIndex="@(Model.songs.PageIndex - 1)"
        class ="btn btn-secondary @hasPrevious">Previous
    </a>
    <a 
        asp-action="Index" 
        asp-route-currentFilter="@Model.filter" 
        asp-route-pageIndex="@(Model.songs.PageIndex + 1)"
        class ="btn btn-secondary @hasNext">Next
    </a>

    <form method="get">    
    <label>From</label>
    <input name="dateFrom" type="date" />
    <label>To</label>
    <input name="dateTo" type="date" />
    <button type="submit">Go</button>
    </form>

    <a asp-controller="Songs" asp-action="Create">Create</a>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a 
                    asp-action="Index" 
                    asp-route-currentFilter="@Model.filter" 
                    asp-route-pageIndex="@(Model.songs.PageIndex)" 
                    asp-route-sortOrder="@ViewData["sortParamTitle"]">Title
                </a>
            </th>
            <th>
                <a 
                    asp-action="Index" 
                    asp-route-currentFilter="@Model.filter" 
                    asp-route-pageIndex="@(Model.songs.PageIndex)" 
                    asp-route-sortOrder="@ViewData["sortParamArtist"]">Artist
                </a>
            </th>
            <th>
                <a 
                    asp-action="Index" 
                    asp-route-currentFilter="@Model.filter" 
                    asp-route-pageIndex="@(Model.songs.PageIndex)" 
                    asp-route-sortOrder="@ViewData["sortParamAlbum"]">Album
                </a>
            </th>
            <th>
                <a 
                    asp-action="Index" 
                    asp-route-currentFilter="@Model.filter" 
                    asp-route-pageIndex="@(Model.songs.PageIndex)" 
                    asp-route-sortOrder="@ViewData["sortParamCreated"]">Created
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach(Spg.MusicPalace.Dtos.SongDto item in @Model.songs)
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.ArtistName</td>
                <td>@item.AlbumName</td>
                <td>@item.Created</td>
                <td>
                    <a asp-controller="Songs" asp-action="Details" asp-route-id="@item.Guid">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
}
else
{
    <div class="alert alert-danger" role="alert">
        No data found!
    </div>
}